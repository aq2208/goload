version: "3.8"

name: goload

services:
  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: quancuanam2003
      MYSQL_DATABASE: goload
      # MYSQL_USER: root
      # MYSQL_PASSWORD: quancuanam2003
    ports:
      - "3306:3306"
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9094:9094"
    restart: always
    environment:
      # KRaft
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listerners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      # Enable Topic Auto-Creation (if the producer send message to a non-existed topic)
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    # volumes:

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    restart: always
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    ports:
      - "9000:9000"
    depends_on:
      - kafka

volumes:
  mysql_data:
